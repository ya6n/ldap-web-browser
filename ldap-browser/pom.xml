<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
  <modelVersion>4.0.0</modelVersion>

  <groupId>fr.uparis10.miage.ldap</groupId>
  <artifactId>ldap-browser</artifactId>
  <packaging>war</packaging>
  <version>0.0.3-SNAPSHOT</version>

  <name>LDAP Web Browser</name>
  <url>http://maven.apache.org</url>

  <properties>
    <!-- Convenience property to set the GWT version -->
    <gwtVersion>2.4.0</gwtVersion>
    <!-- GWT needs at least java 1.5 -->
    <webappDirectory>${project.build.directory}/${project.build.finalName}</webappDirectory>
    <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
    <targetJDK>1.6</targetJDK>
  </properties>

  <issueManagement>
    <system>Redmine</system>
    <url>http://miage08:3000</url>
  </issueManagement>

  <ciManagement>
    <system>Hudson</system>
    <url>http://http://miage08:8181</url>
  </ciManagement>

  <organization>
    <name>Université Paris Ouest Nanterre La Défense</name>
    <url>http://u-paris10.fr</url>
  </organization>

  <dependencies>
    <dependency>
      <groupId>junit</groupId>
      <artifactId>junit</artifactId>
      <version>4.10</version>
    </dependency>
    <dependency>
      <groupId>org.apache.maven.plugins</groupId>
      <artifactId>maven-clean-plugin</artifactId>
      <version>2.4.1</version>
      <type>maven-plugin</type>
      <scope>compile</scope>
    </dependency>
    <dependency>
      <groupId>org.apache.maven.plugins</groupId>
      <artifactId>maven-scm-plugin</artifactId>
      <version>1.4</version>
      <type>maven-plugin</type>
      <scope>compile</scope>
    </dependency>
    <dependency>
      <groupId>org.jvnet.hudson.plugins</groupId>
      <artifactId>redmine</artifactId>
      <version>0.9</version>
      <scope>provided</scope>
    </dependency>
    <dependency>
      <groupId>com.google.gwt</groupId>
      <artifactId>gwt-servlet</artifactId>
      <version>${gwtVersion}</version>
      <scope>runtime</scope>
    </dependency>
    <dependency>
      <groupId>com.sencha.gxt</groupId>
      <artifactId>gxt</artifactId>
      <version>3.0.0-rc2</version>
    </dependency>
    <dependency>
      <groupId>javax.validation</groupId>
      <artifactId>validation-api</artifactId>
      <version>1.0.0.GA</version>
    </dependency>
    <dependency>
      <groupId>com.google.gwt</groupId>
      <artifactId>gwt-user</artifactId>
      <version>${gwtVersion}</version>
    </dependency>
    <dependency>
      <groupId>javax.validation</groupId>
      <artifactId>validation-api</artifactId>
      <version>1.0.0.GA</version>
      <classifier>sources</classifier>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>commons-configuration</groupId>
      <artifactId>commons-configuration</artifactId>
      <version>1.8</version>
    </dependency>
    <dependency>
      <groupId>com.google.code.findbugs</groupId>
      <artifactId>annotations</artifactId>
      <version>2.0.0</version>
    </dependency>
  </dependencies>
  <scm>
    <url>https://code.google.com/p/ldap-web-browser/</url>
    <connection>scm:git:https://code.google.com/p/ldap-web-browser</connection>
  </scm>
  <build>
    <finalName>${project.artifactId}-${project.version}</finalName>
    <!-- Generate compiled stuff in the folder used for developing mode -->
    <outputDirectory>${webappDirectory}/WEB-INF/classes</outputDirectory>
    <!-- testOutputDirectory>target/test-classes</testOutputDirectory -->
    <plugins>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-clean-plugin</artifactId>
        <version>2.4.1</version>
        <configuration>
          <filesets>
            <fileset>
              <directory>reports</directory>
              <includes>
                <include>**/*.xml</include>
                <include>**/*.htm</include>
                <include>**/*.html</include>
              </includes>
              <excludes>
                <exclude>**/mvn-pmd-report.htm</exclude>
              </excludes>
              <followSymlinks>false</followSymlinks>
            </fileset>
            <fileset>
              <directory>src/main/webapp/WEB-INF/classes</directory>
              <includes>
                <include>**/*</include>
              </includes>
            </fileset>
          </filesets>
        </configuration>
      </plugin>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-resources-plugin</artifactId>
        <version>2.5</version>
        <configuration>
          <outputDirectory>${basedir}/target/bin</outputDirectory>
        </configuration>
      </plugin>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-pmd-plugin</artifactId>
        <version>2.7.1</version>
        <configuration>
          <failOnViolation>false</failOnViolation>
          <verbose>true</verbose>
          <aggregate>true</aggregate>
          <format>net.sourceforge.pmd.renderers.XSLTRenderer</format>
          <linkXRef>true</linkXRef>
          <outputDirectory>${basedir}/reports</outputDirectory>
          <targetDirectory>${basedir}/reports</targetDirectory>
          <targetJdk>${targetJDK}</targetJdk>
          <rulesets>
            <ruleset>rulesets/basic.xml</ruleset>
            <ruleset>rulesets/naming.xml</ruleset>
            <ruleset>rulesets/unusedcode.xml</ruleset>
            <ruleset>rulesets/design.xml</ruleset>
            <ruleset>rulesets/imports.xml</ruleset>
            <ruleset>rulesets/junit.xml</ruleset>
            <ruleset>rulesets/strings.xml</ruleset>
            <ruleset>rulesets/braces.xml</ruleset>
            <ruleset>rulesets/codesize.xml</ruleset>
            <ruleset>rulesets/coupling.xml</ruleset>
            <ruleset>rulesets/strictexception.xml</ruleset>
            <ruleset>rulesets/controversial.xml</ruleset>
          </rulesets>
        </configuration>
        <executions>
          <execution>
            <id>pmd-html</id>
            <phase>verify</phase>
            <goals>
              <goal>pmd</goal>
            </goals>
          </execution>
        </executions>
      </plugin>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-compiler-plugin</artifactId>
        <version>2.4</version>
        <configuration>
          <source>${targetJDK}</source>
          <target>${targetJDK}</target>
        </configuration>
      </plugin>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-jar-plugin</artifactId>
        <version>2.4</version>
        <configuration>
          <includes>
            <include>**/*.png</include>
            <include>**/*.gif</include>
            <include>**/*.class</include>
            <include>**/*.jpeg</include>
            <include>**/*.jpg</include>
            <include>**/*.properties</include>
            <include>**/*.xml</include>
            <include>**/*.css</include>
            <include>**/*.xsl</include>
          </includes>
          <archive>
            <addMavenDescriptor />
            <compress />
            <forced />
            <index />
            <manifest>
              <addClasspath />
              <addDefaultImplementationEntries />
              <addDefaultSpecificationEntries />
              <addExtensions />
              <classpathLayoutType />
              <classpathMavenRepositoryLayout />
              <classpathPrefix />
              <customClasspathLayout />
              <mainClass>fr.uparis10.miage.annoarius.edit.lanceur.Main</mainClass>
              <packageName />
            </manifest>
            <manifestFile />
            <pomPropertiesFile />
          </archive>
        </configuration>
      </plugin>
      <plugin>
        <groupId>org.codehaus.mojo</groupId>
        <artifactId>exec-maven-plugin</artifactId>
        <version>1.2.1</version>
        <executions>
          <execution>
            <id>exec</id>
            <phase>install</phase>
            <goals>
              <goal>exec</goal>
            </goals>
          </execution>
        </executions>
        <configuration>
          <executable>/bin/sh</executable>
          <workingDirectory>${basedir}</workingDirectory>
          <arguments>
            <argument>-c</argument>
            <argument>
              <![CDATA[rm reports/pmd.html;mv reports/pmd.net.sourceforge.pmd.renderers.XSLTRenderer reports/mvn-pmd-report.htm]]>
            </argument>
          </arguments>
        </configuration>
      </plugin>
      <!-- GWT Maven Plugin -->
      <plugin>
        <groupId>org.codehaus.mojo</groupId>
        <artifactId>gwt-maven-plugin</artifactId>
        <version>2.4.0</version>
        <executions>
          <execution>
            <goals>
              <goal>compile</goal>
              <goal>test</goal>
              <goal>i18n</goal>
              <!-- <goal>generateAsync</goal> -->
            </goals>
          </execution>
        </executions>
        <!-- Plugin configuration. There are many available options, see gwt-maven-plugin documentation at codehaus.org -->
        <configuration>
          <runTarget>ldap-browser.html</runTarget>
          <hostedWebapp>${webappDirectory}</hostedWebapp>
          <i18nMessagesBundle>fr.uparis10.miage.ldap.client.Messages</i18nMessagesBundle>
        </configuration>
      </plugin>

      <!-- Copy static web files before executing gwt:run -->
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-war-plugin</artifactId>
        <version>2.1.1</version>
        <executions>
          <execution>
            <phase>compile</phase>
            <goals>
              <goal>exploded</goal>
            </goals>
          </execution>
        </executions>
        <configuration>
          <webappDirectory>${webappDirectory}</webappDirectory>
        </configuration>
      </plugin>
    </plugins>
    <defaultGoal>install</defaultGoal>
    <pluginManagement>
      <plugins>
        <!--This plugin's configuration is used to store Eclipse m2e settings only. It has no influence on the Maven build itself. -->
        <plugin>
          <groupId>org.eclipse.m2e</groupId>
          <artifactId>lifecycle-mapping</artifactId>
          <version>1.0.0</version>
          <configuration>
            <lifecycleMappingMetadata>
              <pluginExecutions>
                <pluginExecution>
                  <pluginExecutionFilter>
                    <groupId>org.codehaus.mojo</groupId>
                    <artifactId>gwt-maven-plugin</artifactId>
                    <versionRange>[2.4.0,)</versionRange>
                    <goals>
                      <!-- <goal>generateAsync</goal>  -->
                      <goal>i18n</goal>
                    </goals>
                  </pluginExecutionFilter>
                  <action>
                    <execute>
                      <runOnIncremental>false</runOnIncremental>
                    </execute>
                  </action>
                </pluginExecution>
                <pluginExecution>
                  <pluginExecutionFilter>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-war-plugin</artifactId>
                    <versionRange>[2.1.1,)</versionRange>
                    <goals>
                      <goal>exploded</goal>
                    </goals>
                  </pluginExecutionFilter>
                  <action>
                    <execute>
                      <runOnIncremental>false</runOnIncremental>
                    </execute>
                  </action>
                </pluginExecution>
              </pluginExecutions>
            </lifecycleMappingMetadata>
          </configuration>
        </plugin>
      </plugins>
    </pluginManagement>
  </build>
</project>
